@page "/ProductCategories"
@using EY.CoffeeManagement.App.Application.Dtos
@using EY.CoffeeManagement.App.Application.Dtos.BaseDtos
@using EY.CoffeeManagement.App.Application.Services.DomainServices.Contracts
@using EY.CustomResult
@inject ToastService _toast
@inject IProductCategoryService _productCategoryService
<div class="py-4 justify-content-start">
    <div class="mb-2 row">
        <div class="col">
            <button class="btn btn-primary" @onclick="OpenCreateCanvas">Yeni Ekle</button>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <Grid
                @ref="_grid"
                TItem="ListProductCategoryDto"
                Class="table table-bordered table-hover"
                AllowFiltering="true"
                AllowPaging="true"
                AllowSelection="true"
                SelectionMode="GridSelectionMode.Single"
                Responsive="true"
                DataProvider="DataProvider"
                PageSizeSelectorVisible="true"
                EmptyText="Kategori yok"
                PageSizeSelectorItems="@(new[] { 5, 10, 15, 25 })"
                SelectedItemsChanged="Select"
                Height="400">
                <GridColumns>
                    <GridColumn
                        TItem="ListProductCategoryDto"
                        HeaderText="Kategori AdÄ±"

                        PropertyName="@(nameof(ListProductCategoryDto.Name))">
                        @context.Name
                    </GridColumn>
                </GridColumns>
            </Grid>

        </div>

        @if (selectedProductcategoryDto is not null)
        {
            <UpdateProductCategoryComponent
                AfterSave="async () => { await _grid.RefreshDataAsync(); }"
                ProductCategoryName="@selectedProductcategoryDto.Name"
                Close="() => { selectedProductcategoryDto = null; }" ProductCategoryId="selectedProductcategoryDto!.id"/>
        }
    </div>
</div>

<Offcanvas
    OnHidden="async () => await _grid.RefreshDataAsync()"
    @ref="canvas"
    Placement="Placement.End"/>


@code {
    private Offcanvas canvas = default!;
    ListProductCategoryDto? selectedProductcategoryDto = null;
    Grid<ListProductCategoryDto> _grid;


    private void Select(HashSet<ListProductCategoryDto> selected)
    {
        if (selected.Count == 0)
        {
            selectedProductcategoryDto = null;
            return;
        }

        selectedProductcategoryDto = selected.First();
        StateHasChanged();
    }

    private async Task<GridDataProviderResult<ListProductCategoryDto>> DataProvider(GridDataProviderRequest<ListProductCategoryDto> request)
    {
        Result<PaginateResponse<ListProductCategoryDto>>? result = await _productCategoryService.PaginateAsync<ListProductCategoryDto>(new PaginateRequest(request.PageNumber, request.PageSize));

        return new GridDataProviderResult<ListProductCategoryDto>
        {
            Data = result.Value.list,
            TotalCount = result.Value.totalCount
        };
    }


    private async Task OpenCreateCanvas()
    {
        await canvas.ShowAsync<AddProductCategoryComponent>("Yeni Kategori ekle");
    }


}