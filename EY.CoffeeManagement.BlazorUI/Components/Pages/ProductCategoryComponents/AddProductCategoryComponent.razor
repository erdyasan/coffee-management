@using EY.CoffeeManagement.App.Application.Dtos
@using EY.CoffeeManagement.App.Application.Services.DomainServices.Contracts
@using Blazored.FluentValidation
@inject IProductCategoryService _productCategoryService
@inject ToastService Toast
<div class="container">
    <EditForm
        Model="_model"
        OnValidSubmit="Save">
        <FluentValidationValidator/>
        <div class="form-group">
            <label for="categoryName">Kategori Adı</label>
            <InputText class="form-control" id="categoryName" @bind-Value="_model.Name" DisplayName="Kategori Adı"></InputText>
            <ValidationMessage class="text-danger" For="() => _model.Name"></ValidationMessage>
        </div>
        <div class="form-group">


            <button type="submit" disabled="@isSaving" class="btn btn-success w-100">
                Kaydet
                <BlazorBootstrap.Spinner Visible="isSaving" Size="SpinnerSize.Small" Title="Lütfen Bekleyiniz"></BlazorBootstrap.Spinner>

            </button>
        </div>
    </EditForm>

</div>

@code {
    private bool isSaving = false;
    private string _categoryName;
    private CreateProductCategoryDto _model = new CreateProductCategoryDto("");

    public async Task Save()
    {
        isSaving = true;
        StateHasChanged();
        var result = await _productCategoryService.CreateAsync(_model);
        if (result.IsSuccess)
        {
            Toast.Notify(new ToastMessage(ToastType.Success, "Yeni Kategori Eklendi!"));
        }
        else
        {
            Toast.Notify(new ToastMessage(ToastType.Danger, "Kategori eklenemedi!"));
        }

        isSaving = false;
        StateHasChanged();
    }

}